<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.liveSense</groupId>
	<artifactId>org.liveSense.parent</artifactId>
	<packaging>pom</packaging>
	<version>1-SNAPSHOT</version>
	<licenses>
		<license>
			<name>The Apache Software License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
		</license>
	</licenses>
	<organization>
		<name>liveSense.org</name>
		<url>http://www.livesense.org/</url>
	</organization>
	<name>liveSense (Parent)</name>
	<description>The parent project for liveSense</description>
	<inceptionYear>2010</inceptionYear>
	<url>http://livesense.org</url>
	<prerequisites>
		<maven>2.2.1</maven>
	</prerequisites>
	<properties>
		<gwt.version>2.2.0</gwt.version>
        <jackrabbit.version>2.1.1</jackrabbit.version>
	</properties>
	<!-- <issueManagement> <system>Mantis</system> <url></url> </issueManagement> -->
	<scm>
		<connection>scm:git:git://github.com/liveSense/org.liveSense.parent</connection>
		<developerConnection>scm:git:git://github.com/liveSense/org.liveSense.parent</developerConnection>
		<url>https://github.com/liveSense/org.liveSense.parent</url>
	</scm>
	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.5</version>
				<reportSets>
					<reportSet>
						<reports>
							<report>javadoc</report>
						</reports>
					</reportSet>
				</reportSets>
				<configuration>
					<stylesheet>maven</stylesheet>
					<excludePackageNames>*.impl:*.internal:${site.javadoc.exclude}</excludePackageNames>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>2.4.3</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-changes-plugin</artifactId>
				<version>2.3</version>
				<reportSets>
					<reportSet>
						<reports>
							<report>jira-report</report>
						</reports>
					</reportSet>
				</reportSets>
				<configuration>
					<fixVersionIds>${site.jira.version.id}</fixVersionIds>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-scm-plugin</artifactId>
				<version>1.4</version>
			</plugin>
		</plugins>
	</reporting>
	<build>
		<plugins>
			<!-- Require Java 5 or higher for building -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>1.0</version>
				<executions>
					<execution>
						<id>enforce-java</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<requireJavaVersion>
									<message> Apache Sling must be compiled with Java 5 or higher </message>
									<version>1.5.0</version>
								</requireJavaVersion>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- Attach sources for all builds -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>2.1.2</version>
				<inherited>true</inherited>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.5</version>
				<configuration>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
			<!-- warn for SLING-443/SLING-1782 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.6</version>
				<executions>
					<execution>
						<phase>process-resources</phase>
						<configuration>
							<tasks>
								<echo>
******************************************************************************
On most platforms, you'll get OutOfMemoryErrors when building unless you set
on 32bit platforms: MAVEN_OPTS="-Xmx256M -XX:MaxPermSize=256M"
on 64bit platforms: MAVEN_OPTS="-Xmx512M -XX:MaxPermSize=512M"
******************************************************************************
								</echo>
							</tasks>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>ianal-maven-plugin</artifactId>
				<version>1.0-alpha-1</version>
				<executions>
					<execution>
						<goals>
							<goal>verify-legal-files</goal>
						</goals>
						<configuration>
							<!-- Fail the build if any artifacts are missing legal files -->
							<strict>true</strict>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-remote-resources-plugin</artifactId>
				<version>1.2</version>
				<executions>
					<execution>
						<goals>
							<goal>process</goal>
						</goals>
						<configuration>
							<resourceBundles>
								<resourceBundle>org.apache:apache-jar-resource-bundle:1.4</resourceBundle>
							</resourceBundles>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<plugin>
                	<artifactId>maven-jar-plugin</artifactId>
                	<version>1.8.1</version>
				</plugin>
				<plugin>
                	<groupId>org.apache.maven.plugins</groupId>
                	<artifactId>maven-compiler-plugin</artifactId>
                	<version>2.3.2</version>
				</plugin>
				<plugin>
                	<groupId>org.apache.maven.plugins</groupId>
                	<artifactId>maven-surefire-plugin</artifactId>
                	<version>2.8.1</version>
 				</plugin>
 				<plugin>
                	<groupId>org.apache.maven.plugins</groupId>
                	<artifactId>maven-scm-plugin</artifactId>
                	<version>1.5</version>
           		</plugin>
				<plugin>
					<groupId>org.apache.sling</groupId>
					<artifactId>maven-sling-plugin</artifactId>
					<version>2.0.4-incubator</version>
				</plugin>
				<plugin>
					<groupId>org.apache.sling</groupId>
					<artifactId>maven-launchpad-plugin</artifactId>
					<version>2.0.6</version>
				</plugin>
				<plugin>
					<groupId>org.apache.sling</groupId>
					<artifactId>maven-jspc-plugin</artifactId>
					<version>2.0.4-incubator</version>
				</plugin>
				<plugin>
					<groupId>org.apache.sling</groupId>
					<artifactId>maven-jcrocm-plugin</artifactId>
					<version>2.0.4-incubator</version>
				</plugin>
				<plugin>
					<groupId>org.apache.felix</groupId>
					<artifactId>maven-scr-plugin</artifactId>
					<version>1.6.0</version>
					<!-- As QDox is trying to inspect/load the classes we have to add a slf4j implementation to the 
						class path of the plugin - we usually use a static field for the logger and during class loading this 
						field requires an slf4j implementation! -->
					<dependencies>
						<dependency>
							<groupId>org.slf4j</groupId>
							<artifactId>slf4j-simple</artifactId>
							<version>1.6.1</version>
						</dependency>
					</dependencies>
					<executions>
						<execution>
							<id>generate-scr-scrdescriptor</id>
							<goals>
								<goal>scr</goal>
							</goals>
							<configuration>
								<properties>
									<service.vendor>liveSense.org</service.vendor>
								</properties>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<!-- Compile for Java 5 and higher -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<configuration>
						<source>1.5</source>
						<target>1.5</target>
						<encoding>UTF-8</encoding>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.felix</groupId>
					<artifactId>maven-bundle-plugin</artifactId>
					<version>2.0.1</version>
					<inherited>true</inherited>
					<configuration>
						<outputDirectory>${basedir}/target/classes</outputDirectory>
						<instructions>
							<Bundle-Category>liveSense</Bundle-Category>
							<Bundle-DocURL> http://livesense.org </Bundle-DocURL>
							<Bundle-Vendor>liveSense.org</Bundle-Vendor>
							<Bundle-SymbolicName>${project.artifactId}</Bundle-SymbolicName>
						</instructions>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-release-plugin</artifactId>
					<configuration>
						<tagBase> https://svn.apache.org/repos/asf/sling/tags </tagBase>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>2.1</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>2.1-beta-1</version>
				</plugin>
				<plugin>
					<groupId>org.mortbay.jetty</groupId>
					<artifactId>maven-jetty-plugin</artifactId>
					<version>6.1.20</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.cargo</groupId>
					<artifactId>cargo-maven2-plugin</artifactId>
					<version>1.0</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>ianal-maven-plugin</artifactId>
					<version>1.0-alpha-1</version>
				</plugin>
				<plugin>
					<groupId>org.apache.rat</groupId>
					<artifactId>apache-rat-plugin</artifactId>
					<version>0.6</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.groovy.maven</groupId>
					<artifactId>gmaven-plugin</artifactId>
					<version>1.0</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>animal-sniffer-maven-plugin</artifactId>
					<version>1.5</version>
					<configuration>
						<signature>
							<groupId>org.codehaus.mojo.signature</groupId>
							<artifactId>java15</artifactId>
							<version>1.0</version>
						</signature>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<version>1.5</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>emma-maven-plugin</artifactId>
					<version>1.0-alpha-2</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>gwt-maven-plugin</artifactId>
					<version>2.2.0</version>
					<dependencies>
						<dependency>
							<groupId>com.google.gwt</groupId>
							<artifactId>gwt-user</artifactId>
							<version>${gwt.version}</version>
						</dependency>
						<dependency>
							<groupId>com.google.gwt</groupId>
							<artifactId>gwt-dev</artifactId>
							<version>${gwt.version}</version>
						</dependency>
						<dependency>
							<groupId>com.google.gwt</groupId>
							<artifactId>gwt-servlet</artifactId>
							<version>${gwt.version}</version>
						</dependency>
					</dependencies>
					<executions>
						<execution>
							<id>gwtcompile</id>
							<phase>prepare-package</phase>
							<goals>
								<goal>compile</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	<profiles>
		<profile>
			<!-- Use this profile to install the OSGi bundle automatically, during development -->
			<id>autoInstallBundle</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.sling</groupId>
						<artifactId>maven-sling-plugin</artifactId>
						<executions>
							<execution>
								<id>install-bundle</id>
								<goals>
									<goal>install</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<!-- We should execute this profile manually to make sure that all files in our source code contain 
			proper licenses. This is very important and should not be skipped in any scenario. It is very importnt 
			for us to follow ASF policy. Example: mvn -Prat prepare-release install -->
		<profile>
			<id>rat</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.rat</groupId>
						<artifactId>apache-rat-plugin</artifactId>
						<configuration>
							<excludes>
								<!-- Used by maven-remote-resources-plugin -->
								<exclude>src/main/appended-resources/META-INF/*</exclude>
								<!-- Generated by maven-remote-resources-plugin -->
								<exclude>velocity.log</exclude>
								<!-- don't check anything in target -->
								<exclude>target/*</exclude>
							</excludes>
						</configuration>
						<executions>
							<execution>
								<phase>verify</phase>
								<goals>
									<goal>check</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>animal-sniffer</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>animal-sniffer-maven-plugin</artifactId>
						<executions>
							<execution>
								<phase>test</phase>
								<goals>
									<goal>check</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>emma</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>emma-maven-plugin</artifactId>
						<inherited>true</inherited>
						<executions>
							<execution>
								<phase>prepare-package</phase>
								<goals>
									<goal>instrument</goal>
								</goals>
								<configuration>
									<metadataFile>${user.dir}/coverage.em</metadataFile>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.felix</groupId>
						<artifactId>maven-bundle-plugin</artifactId>
						<inherited>true</inherited>
						<executions>
							<execution>
								<id>emma-bundle</id>
								<goals>
									<goal>bundle</goal>
								</goals>
								<phase>package</phase>
								<configuration>
									<classifier>emma</classifier>
									<outputDirectory>${basedir}/target/generated-classes/emma/classes</outputDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>emma-report</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.groovy.maven</groupId>
						<artifactId>gmaven-plugin</artifactId>
						<executions>
							<!-- store the project's source dir in a comma-delimited list for the emma report. -->
							<execution>
								<id>save-bundle-metadata</id>
								<goals>
									<goal>execute</goal>
								</goals>
								<phase>validate</phase>
								<configuration>
									<source> if (!session.executionProperties.sourceDirs) {
										session.executionProperties.sourceDirs = "${basedir}/src/main/java" } else {
										session.executionProperties.sourceDirs += ",${basedir}/src/main/java" } </source>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
	<!-- <mailingLists> <mailingList> <name>LiveSense Development List</name> <subscribe> livesense-dev\+subscribe@googlegroups.com 
		</subscribe> livesense-dev\+unsubscribe@googlegroups.com <unsubscribe> </unsubscribe> <post>livesense-dev 
		at googlegroups.com</post> <archive> http://groups.google.com/group/livesense-dev </archive> </mailingList> 
		</mailingLists> -->
	<!-- Please visit our website for the current information about the liveSense project team. -->
	<developers>
		<developer>
			<name>LiveSense Project</name>
			<id>livesense</id>
			<url>http://livesense.org</url>
		</developer>
	</developers>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.apache.sling</groupId>
				<artifactId>org.apache.sling.api</artifactId>
				<version>2.2.0</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.sling</groupId>
				<artifactId>org.apache.sling.commons.log</artifactId>
				<version>2.1.2</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.sling</groupId>
				<artifactId>org.apache.sling.jcr.api</artifactId>
				<version>2.1.0</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.jackrabbit</groupId>
				<artifactId>jackrabbit-jcr-commons</artifactId>
				<version>${jackrabbit.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.jackrabbit</groupId>
				<artifactId>jackrabbit-core</artifactId>
				<version>${jackrabbit.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.sling</groupId>
				<artifactId>org.apache.sling.commons.osgi</artifactId>
				<version>2.0.6</version>
			</dependency>
			<dependency>
				<groupId>org.apache.felix</groupId>
				<artifactId>org.apache.felix.eventadmin</artifactId>
				<version>1.2.8</version>
			</dependency>
			<dependency>
				<groupId>org.liveSense</groupId>
				<artifactId>org.liveSense.servlet.gwtrpc</artifactId>
				<version>1.0.1-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>org.liveSense</groupId>
				<artifactId>org.liveSense.core</artifactId>
				<version>1.0.1-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>org.liveSense</groupId>
				<artifactId>org.liveSense.misc.jcrom</artifactId>
				<version>1.0.0-SNAPSHOT</version>
			</dependency>

			<dependency>
				<groupId>commons-beanutils</groupId>
				<artifactId>commons-beanutils-core</artifactId>
				<version>1.8.3</version>
				<type>jar</type>
			</dependency>
			<dependency>
				<groupId>net.sf.opencsv</groupId>
				<artifactId>opencsv</artifactId>
				<version>2.1</version>
				<type>jar</type>
			</dependency>
			<dependency>
				<groupId>com.google.gwt</groupId>
				<artifactId>gwt-user</artifactId>
				<version>${gwt.version}</version>
				<type>jar</type>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>com.google.gwt</groupId>
				<artifactId>gwt-servlet</artifactId>
				<version>${gwt.version}</version>
				<type>jar</type>
			</dependency>
			<dependency>
				<groupId>org.liveSense</groupId>
				<artifactId>org.liveSense.scripting.jsp.taglib.jstl</artifactId>
				<version>1.0.1-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>org.apache.sling</groupId>
				<artifactId>org.apache.sling.scripting.jsp.taglib</artifactId>
				<version>2.1.0</version>
			</dependency>
			<dependency>
				<groupId>org.apache.sling</groupId>
				<artifactId>org.apache.sling.commons.scheduler</artifactId>
				<version>2.2.0</version>
			</dependency>
			<dependency>
				<groupId>org.liveSense</groupId>
				<artifactId>org.liveSense.service.securityManager</artifactId>
				<version>1.0.1-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>org.apache.sling</groupId>
				<artifactId>org.apache.sling.jcr.base</artifactId>
				<version>2.1.0</version>
			</dependency>
			<dependency>
				<groupId>org.apache.sling</groupId>
				<artifactId>org.apache.sling.commons.mime</artifactId>
				<version>2.1.4</version>
			</dependency>
			<dependency>
				<groupId>org.apache.jackrabbit</groupId>
				<artifactId>jackrabbit-api</artifactId>
				<version>${jackrabbit.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.sling</groupId>
				<artifactId>org.apache.sling.jcr.resource</artifactId>
				<version>2.0.8</version>
			</dependency>
			<dependency>
				<groupId>org.apache.sling</groupId>
				<artifactId>org.apache.sling.event</artifactId>
				<version>3.0.2</version>
			</dependency>
			<dependency>
				<groupId>org.apache.sling</groupId>
				<artifactId>org.apache.sling.auth.core</artifactId>
				<version>1.0.4</version>
			</dependency>
			<dependency>
				<groupId>org.apache.sling</groupId>
				<artifactId>org.apache.sling.engine</artifactId>
				<version>2.1.0</version>
			</dependency>
			<!-- OSGi Core and Compendium API -->
			<dependency>
				<groupId>org.osgi</groupId>
				<artifactId>org.osgi.core</artifactId>
				<version>4.1.0</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.osgi</groupId>
				<artifactId>org.osgi.compendium</artifactId>
				<version>4.1.0</version>
				<scope>provided</scope>
			</dependency>
			<!-- Web Application API -->
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>servlet-api</artifactId>
				<version>2.4</version>
				<scope>provided</scope>
			</dependency>
			<!-- JCR API -->
			<dependency>
				<groupId>javax.jcr</groupId>
				<artifactId>jcr</artifactId>
				<version>2.0</version>
				<scope>provided</scope>
			</dependency>
			<!-- Basic Logging -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>1.5.2</version>
				<scope>provided</scope>
			</dependency>
			<!-- Declarative Services support annotations -->
			<dependency>
				<groupId>org.apache.felix</groupId>
				<artifactId>org.apache.felix.scr.annotations</artifactId>
				<version>1.4.0</version>
				<scope>provided</scope>
			</dependency>
			<!-- Basic dependencies for Unit Tests -->
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>4.8.2</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.jmock</groupId>
				<artifactId>jmock-junit4</artifactId>
				<version>2.5.1</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-simple</artifactId>
				<version>1.5.2</version>
				<scope>test</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	
	  <repositories>
        <repository>
          <snapshots>
            <enabled>false</enabled>
          </snapshots>
          <id>central</id>
          <name>livesense-release</name>
          <url>http://livesense.org/artifactory/libs-release</url>
        </repository>
        <repository>
          <snapshots />
          <id>snapshots</id>
          <name>livesense-snapshot</name>
          <url>http://livesense.org/artifactory/libs-snapshot</url>
        </repository>
      </repositories>
      
      <pluginRepositories>
        <pluginRepository>
          <snapshots>
            <enabled>false</enabled>
          </snapshots>
          <id>central</id>
          <name>livesense-plugins-release</name>
          <url>http://livesense.org/artifactory/plugins-release</url>
        </pluginRepository>
        <pluginRepository>
          <snapshots />
          <id>snapshots</id>
          <name>livesense-plugins-snapshot</name>
          <url>http://livesense.org/artifactory/plugins-snapshot</url>
        </pluginRepository>
      </pluginRepositories>
    
       <distributionManagement>
        <repository>
            <id>livesense-distribution-releases</id>
            <name>releases</name>
            <url>http://livesense.org/artifactory/libs-release-local</url>
        </repository>
        
        <snapshotRepository>
            <id>livesense-distribution-snapshots</id>
            <name>snapshots</name>
            <url>http://livesense.org/artifactory/libs-snapshot-local</url>
        </snapshotRepository>                                        
    </distributionManagement>
</project>